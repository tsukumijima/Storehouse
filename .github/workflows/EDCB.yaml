
name: Build EDCB

# 手動実行
on: [workflow_dispatch]

# ジョブの定義
jobs:

  # EDCB (32bit / 64bit) のビルド
  build:
    runs-on: windows-2019
    steps:

      # MSBuild のセットアップ
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.2

      # 静的アセットの取得
      - name: Get Assets
        run: |
          git clone https://github.com/${{github.repository}}.git tmp
          cp -Path tmp/.github/workflows/assets/ -Destination Assets/ -Recurse

      # EDCB のビルド
      - name: Build EDCB
        run: |
          git clone -b fork https://github.com/tsukumijima/EDCB.git

          # EDCB 本体のビルド
          cd EDCB/Document/
          msbuild EDCB_ALL.VS2015.sln /t:Build /p:Configuration=Release /p:Platform=Win32 /p:PlatformToolset=v142
          msbuild EDCB_ALL.VS2015.sln /t:Build /p:Configuration=Release /p:Platform=x64 /p:PlatformToolset=v142

          # EDCB 付属ツール群のビルド
          cd ../ini/Tools/
          msbuild misc.sln /t:Build /p:Configuration=Release /p:Platform=x86 /p:PlatformToolset=v142
          msbuild misc.sln /t:Build /p:Configuration=Release /p:Platform=x64 /p:PlatformToolset=v142
          cd IBonCast/
          msbuild IBonCast.sln /t:Build /p:Configuration=Release /p:Platform=x86 /p:PlatformToolset=v142
          msbuild IBonCast.sln /t:Build /p:Configuration=Release /p:Platform=x64 /p:PlatformToolset=v142
          cd ../tsidmove/
          msbuild tsidmove.sln /t:Build /p:Configuration=Release /p:Platform=x86 /p:PlatformToolset=v142
          msbuild tsidmove.sln /t:Build /p:Configuration=Release /p:Platform=x64 /p:PlatformToolset=v142

      # EDCB のバージョンとして用いる日付を取得して保存
      - id: version
        name: Set EDCB Version
        working-directory: EDCB/
        run: |
          $version = bash -c 'grep -E \"#define EDCB_VERSION_TAG\" Common/CommonResource.h | sed s/\\\"//g | sed \"s/#define EDCB_VERSION_TAG tkntrec-//g\"'
          $version_date = [DateTime]::ParseExact($version, "yyMMdd", $null).ToString("yyyy/MM/dd")
          echo "::set-output name=data::EDCB-$version"
          echo "::set-output name=version_date::$version_date"

      # パッケージングスクリプトを実行し、ビルド成果物を適切なフォルダに配置
      - name: Arrangement Artifacts
        run: |

          # パッケージスクリプトを実行
          mkdir Packages
          cd EDCB/
          bash package.sh -a x86 -t Release -o ../Packages/
          bash package.sh -a x64 -t Release -o ../Packages/
          cd ../

          # ビルド成果物を配置
          mkdir ${{steps.version.outputs.data}}
          cp -Path Packages/x86/release/ -Destination ${{steps.version.outputs.data}}/EDCB_32bit/ -Recurse
          cp -Path Packages/x64/release/ -Destination ${{steps.version.outputs.data}}/EDCB_64bit/ -Recurse
          cp -Path Assets/EDCB/* -Destination ${{steps.version.outputs.data}}/EDCB_32bit/ -Recurse -Force
          cp -Path Assets/EDCB/* -Destination ${{steps.version.outputs.data}}/EDCB_64bit/ -Recurse -Force

          # EDCB_Build.txt を配置
          cp -Path Assets/EDCB_Build.txt -Destination ${{steps.version.outputs.data}}/
          bash -c "sed -i 's|%VER_DATE%|${{steps.version.outputs.version_date}}|g' ${{steps.version.outputs.data}}/EDCB_Build.txt"

      # libaribb25 (B25Decoder.dll / B1Decoder.dll) のビルド
      - name: Build libaribb25 (B25Decoder.dll / B1Decoder.dll)
        run: |
          git clone -b master https://github.com/tsukumijima/libaribb25.git
          cd libaribb25/
          msbuild arib_std_b25.sln /t:Build /p:Configuration=Release /p:Platform=Win32 /p:PlatformToolset=v142
          msbuild arib_std_b25.sln /t:Build /p:Configuration=Release /p:Platform=x64 /p:PlatformToolset=v142
          cp -Path Win32/Release/libaribb1.dll -Destination ../${{steps.version.outputs.data}}/EDCB_32bit/B1Decoder.dll
          cp -Path Win32/Release/libaribb25.dll -Destination ../${{steps.version.outputs.data}}/EDCB_32bit/B25Decoder.dll
          cp -Path x64/Release/libaribb1.dll -Destination ../${{steps.version.outputs.data}}/EDCB_64bit/B1Decoder.dll
          cp -Path x64/Release/libaribb25.dll -Destination ../${{steps.version.outputs.data}}/EDCB_64bit/B25Decoder.dll

      # OpenSSL ライブラリのダウンロード
      - name: Download OpenSSL Libraries
        run: |
          curl -LO https://web.archive.org/web/2if_/https://curl.se/windows/dl-7.78.0/openssl-1.1.1k-win32-mingw.zip
          curl -LO https://web.archive.org/web/2if_/https://curl.se/windows/dl-7.78.0/openssl-1.1.1k-win64-mingw.zip
          7z x -y openssl-1.1.1k-win32-mingw.zip
          7z x -y openssl-1.1.1k-win64-mingw.zip
          cp -Path openssl-1.1.1k-win32-mingw/libcrypto-1_1.dll -Destination ${{steps.version.outputs.data}}/EDCB_32bit/
          cp -Path openssl-1.1.1k-win32-mingw/libssl-1_1.dll -Destination ${{steps.version.outputs.data}}/EDCB_32bit/
          cp -Path openssl-1.1.1k-win32-mingw/openssl.exe -Destination ${{steps.version.outputs.data}}/EDCB_32bit/
          cp -Path openssl-1.1.1k-win64-mingw/libcrypto-1_1-x64.dll -Destination ${{steps.version.outputs.data}}/EDCB_64bit/
          cp -Path openssl-1.1.1k-win64-mingw/libssl-1_1-x64.dll -Destination ${{steps.version.outputs.data}}/EDCB_64bit/
          cp -Path openssl-1.1.1k-win64-mingw/openssl.exe -Destination ${{steps.version.outputs.data}}/EDCB_64bit/

      # Lua 5.2 のダウンロード
      - name: Download Lua 5.2
        run: |
          curl -LO https://master.dl.sourceforge.net/project/luabinaries/5.2.4/Windows%20Libraries/Dynamic/lua-5.2.4_Win32_dllw6_lib.zip
          curl -LO https://master.dl.sourceforge.net/project/luabinaries/5.2.4/Windows%20Libraries/Dynamic/lua-5.2.4_Win64_dllw6_lib.zip
          7z x -y lua-5.2.4_Win32_dllw6_lib.zip
          cp -Path lua52.dll -Destination ${{steps.version.outputs.data}}/EDCB_32bit/
          7z x -y lua-5.2.4_Win64_dllw6_lib.zip
          cp -Path lua52.dll -Destination ${{steps.version.outputs.data}}/EDCB_64bit/

      # lua-zlib のビルド
      - name: Build zlib
        run: |
          curl -LO https://github.com/xtne6f/EDCB/releases/download/work-plus-s-220921/EDCB-work-plus-s-bin.zip
          7z x -y EDCB-work-plus-s-bin.zip
          7z x -y -o"lua-zlib/" lua-zlib-0.5-zlib-1.2.12-src.7z
          cd lua-zlib/
          msbuild lua-zlib.sln /t:Build /p:Configuration=Release /p:Platform=x86 /p:PlatformToolset=v142
          msbuild lua-zlib.sln /t:Build /p:Configuration=Release /p:Platform=x64 /p:PlatformToolset=v142
          cp -Path Release/zlib.dll -Destination ../${{steps.version.outputs.data}}/EDCB_32bit/
          cp -Path x64/Release/zlib.dll -Destination ../${{steps.version.outputs.data}}/EDCB_64bit/

      # Write_Multi (EdcbPlugIn 向け書き出しプラグイン) のビルド
      - name: Build Write_Multi
        run: |
          git clone -b master https://github.com/tsukumijima/Write_Multi.git
          cd Write_Multi/
          msbuild Write_Multi.sln /t:Build /p:Configuration=Release /p:Platform=x86 /p:PlatformToolset=v142
          msbuild Write_Multi.sln /t:Build /p:Configuration=Release /p:Platform=x64 /p:PlatformToolset=v142
          cp -Path Release/Write_Multi.dll -Destination ../${{steps.version.outputs.data}}/EDCB_32bit/EdcbPlugIn/
          cp -Path x64/Release/Write_Multi.dll -Destination ../${{steps.version.outputs.data}}/EDCB_64bit/EdcbPlugIn/

      # EDCB Material WebUI のダウンロード
      - name: Download EDCB Material WebUI
        run: |
          git clone -b master https://github.com/tsukumijima/EDCB_Material_WebUI.git
          cp -Path EDCB_Material_WebUI/HttpPublic/* -Destination ${{steps.version.outputs.data}}/EDCB_32bit/HttpPublic/ -Recurse -Force
          cp -Path EDCB_Material_WebUI/HttpPublic/* -Destination ${{steps.version.outputs.data}}/EDCB_64bit/HttpPublic/ -Recurse -Force
          cp -Path EDCB_Material_WebUI/README.md -Destination ${{steps.version.outputs.data}}/EDCB_32bit/Readme_EMWUI.md
          cp -Path EDCB_Material_WebUI/README.md -Destination ${{steps.version.outputs.data}}/EDCB_64bit/Readme_EMWUI.md

      # FFmpeg 4.1.4 のダウンロード
      - name: Download FFmpeg 4.1.4
        run: |
          curl -LO https://web.archive.org/web/2if_/https://ffmpeg.zeranoe.com/builds/win32/shared/ffmpeg-4.1.4-win32-shared.zip
          curl -LO https://web.archive.org/web/2if_/https://ffmpeg.zeranoe.com/builds/win64/shared/ffmpeg-4.1.4-win64-shared.zip
          7z x -y ffmpeg-4.1.4-win32-shared.zip
          7z x -y ffmpeg-4.1.4-win64-shared.zip
          cp -Path ffmpeg-4.1.4-win32-shared/bin/* -Destination ${{steps.version.outputs.data}}/EDCB_32bit/Tools/
          cp -Path ffmpeg-4.1.4-win64-shared/bin/* -Destination ${{steps.version.outputs.data}}/EDCB_64bit/Tools/
          rm ${{steps.version.outputs.data}}/EDCB_32bit/Tools/ffplay.exe
          rm ${{steps.version.outputs.data}}/EDCB_64bit/Tools/ffplay.exe

      # psisiarc のビルド
      - name: Build psisiarc
        run: |
          git clone -b master https://github.com/xtne6f/psisiarc
          cd psisiarc/
          msbuild psisiarc.sln /t:Build /p:Configuration=Release /p:Platform=x86 /p:PlatformToolset=v142
          msbuild psisiarc.sln /t:Build /p:Configuration=Release /p:Platform=x64 /p:PlatformToolset=v142
          cp -Path Release/psisiarc.exe -Destination ../${{steps.version.outputs.data}}/EDCB_32bit/Tools/
          cp -Path x64/Release/psisiarc.exe -Destination ../${{steps.version.outputs.data}}/EDCB_64bit/Tools/

      # tsreadex のビルド
      - name: Build tsmemseg
        run: |
          git clone -b master https://github.com/xtne6f/tsmemseg
          cd tsmemseg/
          msbuild tsmemseg.sln /t:Build /p:Configuration=Release /p:Platform=x86 /p:PlatformToolset=v142
          msbuild tsmemseg.sln /t:Build /p:Configuration=Release /p:Platform=x64 /p:PlatformToolset=v142
          cp -Path Release/tsmemseg.exe -Destination ../${{steps.version.outputs.data}}/EDCB_32bit/Tools/
          cp -Path x64/Release/tsmemseg.exe -Destination ../${{steps.version.outputs.data}}/EDCB_64bit/Tools/

      # tsreadex のビルド
      - name: Build tsreadex
        run: |
          git clone -b master https://github.com/xtne6f/tsreadex
          cd tsreadex/
          msbuild tsreadex.sln /t:Build /p:Configuration=Release /p:Platform=x86 /p:PlatformToolset=v142
          msbuild tsreadex.sln /t:Build /p:Configuration=Release /p:Platform=x64 /p:PlatformToolset=v142
          cp -Path Release/tsreadex.exe -Destination ../${{steps.version.outputs.data}}/EDCB_32bit/Tools/
          cp -Path x64/Release/tsreadex.exe -Destination ../${{steps.version.outputs.data}}/EDCB_64bit/Tools/

      # Artifact としてアップロード
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{steps.version.outputs.data}}.zip
          path: ${{steps.version.outputs.data}}/
